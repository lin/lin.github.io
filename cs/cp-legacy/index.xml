<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yingkui Lin</title><link>https://yingkui.com/cs/cp-legacy/</link><description>Recent content on Yingkui Lin</description><generator>Hugo</generator><language>en-us</language><copyright>© Copyright Yingkui.com All Rights Reserved</copyright><lastBuildDate>Thu, 15 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yingkui.com/cs/cp-legacy/index.xml" rel="self" type="application/rss+xml"/><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/06-15-2023/</link><pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/06-15-2023/</guid><description>&lt;h3 id="cf-edu-150"&gt;CF Edu 150&lt;/h3&gt;
&lt;p&gt;Can&amp;rsquo;t solve the problem because I didn&amp;rsquo;t realize negative test cases.&lt;/p&gt;
&lt;h3 id="codechef-94"&gt;Codechef 94&lt;/h3&gt;
&lt;p&gt;Was chatting with friends while competing, could solve that 2204 problem if another 5 minutes was given.&lt;/p&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/06-07-2022/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/06-07-2022/</guid><description>&lt;h3 id="codechef-palindrome-xor"&gt;Codechef Palindrome XOR&lt;/h3&gt;
&lt;p&gt;Attended Codechef after a day of hard work, unable to solve the first problem due to miscalculation.&lt;/p&gt;
&lt;p&gt;I thought &lt;code&gt;O(Prime Number Count * N)&lt;/code&gt; which I correctly estimated as &lt;code&gt;10**7&lt;/code&gt; is TLE, so I rejected the idea.&lt;/p&gt;
&lt;h3 id="codeforces-div-3"&gt;Codeforces DIV 3&lt;/h3&gt;
&lt;p&gt;This contest is basically Leetcode-like, sliding window and binary search. And I got my best performance here.&lt;/p&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/06-05-2023/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/06-05-2023/</guid><description/></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/06-04-2023/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/06-04-2023/</guid><description>&lt;h3 id="the-week-of-disasters"&gt;The Week of Disasters&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;I solved Leetcode WC 348 Q3 in 5 mins after corrected my misunderstanding, I thought I have to sum up every query. Should be in top 1000.&lt;/li&gt;
&lt;li&gt;So tired when solving CF 876, solving Q1 after 20+ minutes.&lt;/li&gt;
&lt;li&gt;Doing pretty good at ABC 304, but that contest ends up unrated due to slow scoring.&lt;/li&gt;
&lt;li&gt;I am getting negative delta at LC for three contests. Wish myself luck for next week!&lt;/li&gt;
&lt;li&gt;I can&amp;rsquo;t solve DIV2B for the very first time! (except for the rejudge and the second contest about input)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeforces.com/contest/1838/problem/B"&gt;B. Minimize Permutation Subarrays&lt;/a&gt;, I spent 115 minutes for this problem. And the solution is quite simple. It seems like if I don&amp;rsquo;t realize the trick, I may solve this problem for another two hours. What a sad day!&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;/h3&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/05-30-2023/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-30-2023/</guid><description/></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/05-29-2023/</link><pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-29-2023/</guid><description>&lt;h4 id="log-2-values-progress-log_2-10-approx-33--for-each-10"&gt;Log 2 values progress $\log_2 10 \approx 3.3 $ for each 10&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;$2^{30} \approx 10^9$&lt;/li&gt;
&lt;li&gt;$\log_2 10^9 \approx 30$&lt;/li&gt;
&lt;li&gt;$\log_2 10^8 \approx 27$&lt;/li&gt;
&lt;li&gt;$\log_2 10^7 \approx 23$&lt;/li&gt;
&lt;li&gt;$\log_2 10^6 \approx 20$&lt;/li&gt;
&lt;li&gt;$\log_2 10^5 \approx 17$&lt;/li&gt;
&lt;li&gt;$\log_2 10^4 \approx 13$&lt;/li&gt;
&lt;li&gt;$\log_2 10^3 \approx 10$&lt;/li&gt;
&lt;li&gt;$2^{10} \approx 10^3$&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/05-27-2023/</link><pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-27-2023/</guid><description>&lt;p&gt;Both Q4 from this week is at the boundary of my ability.&lt;/p&gt;
&lt;h3 id="biweekly-contest-105---q4---reached-917--921"&gt;Biweekly Contest 105 - Q4 - reached 917 / 921&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://leetcode.com/contest/biweekly-contest-105/problems/greatest-common-divisor-traversal/"&gt;2709. Greatest Common Divisor Traversal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I know this is DSU with primes for sure in the first minute. But I couldn&amp;rsquo;t find it out using the same technique as in the sieve of Eratosthenes.&lt;/p&gt;
&lt;p&gt;Actually I have solved similar problems before:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/sum-of-floored-pairs/"&gt;1862. Sum of Floored Pairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/number-of-different-subsequences-gcds/"&gt;1819. Number of Different Subsequences GCDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next time, when I see GCD problems, I will think about harmonic series first.&lt;/p&gt;</description></item><item><title>刷题一周年纪念</title><link>https://yingkui.com/cs/cp-legacy/05-24-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-24-2023/</guid><description>&lt;h2 id="当时觉得很难的题目"&gt;当时觉得很难的题目&lt;/h2&gt;
&lt;h4 id="1---binary-search-33-search-in-rotated-sorted-array"&gt;1 - Binary Search &lt;a href="https://leetcode.com/problems/search-in-rotated-sorted-array/"&gt;33. Search in Rotated Sorted Array&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;简化之后的题：&lt;a href="https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/"&gt;153. Find Minimum in Rotated Sorted Array&lt;/a&gt;，今日用时12分钟，也不是很快，相当于1550的题&lt;/p&gt;
&lt;p&gt;在做完上题之后，&lt;a href="https://leetcode.com/problems/search-in-rotated-sorted-array/"&gt;本题&lt;/a&gt; 今日用时8分钟，还是容易出bug，因为逻辑比较脆弱&lt;/p&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/05-23-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-23-2023/</guid><description>&lt;p&gt;今天是开始刷题一周年纪念日，就从今天开始记录一些总结。&lt;/p&gt;
&lt;h3 id="1---3d-dp-with-small-numbers"&gt;1 - 3D dp with small numbers&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://leetcode.com/problems/number-of-distinct-roll-sequences/"&gt;Leetcode 2318. Number of Distinct Roll Sequences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很快就想到了要用dp，也找到了关系式，但没有很快意识到原来 &lt;code&gt;6*6*n&lt;/code&gt; 是一个很小的数值，以为三个变量的dp会过于巨大，而过早的放弃了这个方向的尝试&lt;/p&gt;</description></item><item><title>每日刷题总结</title><link>https://yingkui.com/cs/cp-legacy/05-25-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/05-25-2023/</guid><description>&lt;h3 id="1---precomputation-1-two-sum"&gt;1 - Precomputation: &lt;a href="https://leetcode.com/problems/two-sum/"&gt;1. Two Sum&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Normally, we may use brute force to find the solution.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;class&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;Solution&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;twoSum&lt;/span&gt;(self, nums: List[int], target: int) &lt;span style="color:#f92672"&gt;-&amp;gt;&lt;/span&gt; List[int]:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; n &lt;span style="color:#f92672"&gt;=&lt;/span&gt; len(nums)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; i &lt;span style="color:#f92672"&gt;in&lt;/span&gt; range(n):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; j &lt;span style="color:#f92672"&gt;in&lt;/span&gt; range(i&lt;span style="color:#f92672"&gt;+&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;, n):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; nums[i] &lt;span style="color:#f92672"&gt;+&lt;/span&gt; nums[j] &lt;span style="color:#f92672"&gt;==&lt;/span&gt; target:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; [i, j]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But for &lt;code&gt;i&lt;/code&gt; after first &lt;code&gt;j&lt;/code&gt;, we have seen them and we can remember them while we progress to higher &lt;code&gt;i&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Or we can precompute the position for a seen number&lt;/p&gt;</description></item><item><title/><link>https://yingkui.com/cs/cp-legacy/gaokao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/gaokao/</guid><description>&lt;p&gt;&lt;a href="https://atcoder.jp/contests/abc307/tasks/abc307_e"&gt;https://atcoder.jp/contests/abc307/tasks/abc307_e&lt;/a&gt;&lt;/p&gt;</description></item><item><title/><link>https://yingkui.com/cs/cp-legacy/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/readme/</guid><description>&lt;h1 id="learning-the-basics-of-cs"&gt;Learning the Basics of CS&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;:books: Books, :mortar_board: Formal Courses, :tv: YouTube Videos, :male_detective: Cracking Source Codes&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="core-goals"&gt;Core Goals:&lt;/h2&gt;
&lt;p&gt;Internalize the following subjects:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;:balance_scale: - Mathematical Logic&lt;/li&gt;
&lt;li&gt;:abacus:	- Theory of Computation&lt;/li&gt;
&lt;li&gt;:electric_plug: - Computer Systems&lt;/li&gt;
&lt;li&gt;:robot: - Artificial Intelligence&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="stage-i-mathematical-logic--computation-theory"&gt;Stage I: Mathematical Logic &amp;amp; Computation Theory&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;:exclamation: :books: &lt;a href="https://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X"&gt;Introduction to the Theory of Computation&lt;/a&gt;, Feb. 2019, Sep. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:exclamation: :books: &lt;a href="https://www.amazon.com/Merrie-Bergmann-Associated-Professor-Emeritus/dp/0078038413"&gt;The Logic Book&lt;/a&gt;, Nov. 2017, Jul. 2019, Sep. 2020&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:books: &lt;a href="https://www.amazon.com/Annotated-Turing-Through-Historic-Computability/dp/0470229055/"&gt;The Annotated Turing&lt;/a&gt;, Nov. 2017, Sep. 2020&lt;/p&gt;</description></item><item><title>题型总结</title><link>https://yingkui.com/cs/cp-legacy/topic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yingkui.com/cs/cp-legacy/topic/</guid><description>&lt;h3 id="sort"&gt;&lt;a href="../t/sort"&gt;Sort&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Merge Sort and Quick Sort&lt;/li&gt;
&lt;li&gt;Heap&lt;/li&gt;
&lt;li&gt;&lt;a href="../t/sort-key"&gt;Sort Keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SortedContainers / SortedList&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="prime"&gt;Prime&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Prime factorization&lt;/li&gt;
&lt;li&gt;Sieve of Eratosthenes&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="disjoint-set"&gt;Disjoint Set&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Groups&lt;/li&gt;
&lt;li&gt;Loop check&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="intervals--range"&gt;Intervals / Range&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;merge / insert / remove&lt;/li&gt;
&lt;li&gt;line sweeping&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="dp"&gt;DP&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Knapsack&lt;/li&gt;
&lt;li&gt;Select / Skip&lt;/li&gt;
&lt;li&gt;Coin Change&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="dp-knapsack"&gt;DP Knapsack&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="heap"&gt;Heap&lt;/h3&gt;
&lt;h3 id="on-subarray"&gt;O(n) Subarray&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Mono Stack&lt;/li&gt;
&lt;li&gt;Prev / Next Smaller / Greater&lt;/li&gt;
&lt;li&gt;Contribution for one element&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="subsequence"&gt;Subsequence&lt;/h3&gt;
&lt;h3 id="partition"&gt;Partition&lt;/h3&gt;
&lt;h3 id="bitmask"&gt;Bitmask&lt;/h3&gt;
&lt;h3 id="dp-bitmask--subset"&gt;&lt;a href="../t/dp-bitmask"&gt;DP Bitmask / Subset&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1125779/dynamic-programming-on-subsets-with-examples-explained"&gt;Leetcode Post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="trees"&gt;Trees&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;use stack for dfs&lt;/li&gt;
&lt;li&gt;edges to tree graph&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="palindrome"&gt;Palindrome&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;dp for substring check&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="graphs"&gt;Graphs&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Topological Sort (DAG)&lt;/li&gt;
&lt;li&gt;Dijkstra&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leetcode.com/problems/is-graph-bipartite/"&gt;Bipartite Checks&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="sliding-window"&gt;Sliding Window&lt;/h3&gt;
&lt;h3 id="array"&gt;Array&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;K Sum&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>