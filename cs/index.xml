<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程相关文章 on Yingkui</title><link>https://albert.cn/cs/</link><description>Recent content in 编程相关文章 on Yingkui</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright albert.cn / Yingkui.com All Rights Reserved</copyright><lastBuildDate>Thu, 15 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://albert.cn/cs/index.xml" rel="self" type="application/rss+xml"/><item><title>每日刷题总结</title><link>https://albert.cn/cs/06-15-2023/</link><pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/06-15-2023/</guid><description>CF Edu 150 Can&amp;rsquo;t solve the problem because I didn&amp;rsquo;t realize negative test cases. Codechef 94 Was chatting with friends while competing, could solve that 2204 problem if another 5 minutes was given.</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/06-07-2022/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/06-07-2022/</guid><description>Codechef Palindrome XOR Attended Codechef after a day of hard work, unable to solve the first problem due to miscalculation. I thought O(Prime Number Count * N) which I correctly estimated as 10**7 is TLE, so I rejected the idea. Codeforces DIV 3 This contest is basically Leetcode-like, sliding window and binary search. And I got my best performance here.</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/06-05-2023/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/06-05-2023/</guid><description/></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/06-04-2023/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/06-04-2023/</guid><description>The Week of Disasters I solved Leetcode WC 348 Q3 in 5 mins after corrected my misunderstanding, I thought I have to sum up every query. Should be in top 1000. So tired when solving CF 876, solving Q1 after 20+ minutes. Doing pretty good at ABC 304, but that contest ends up unrated due to slow scoring. I am getting negative delta at LC for three contests. Wish myself</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/05-30-2023/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-30-2023/</guid><description/></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/05-29-2023/</link><pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-29-2023/</guid><description>Log 2 values progress $\log_2 10 \approx 3.3 $ for each 10 $2^{30} \approx 10^9$ $\log_2 10^9 \approx 30$ $\log_2 10^8 \approx 27$ $\log_2 10^7 \approx 23$ $\log_2 10^6 \approx 20$ $\log_2 10^5 \approx 17$ $\log_2 10^4 \approx 13$ $\log_2 10^3 \approx 10$ $2^{10} \approx 10^3$</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/05-27-2023/</link><pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-27-2023/</guid><description>Both Q4 from this week is at the boundary of my ability. Biweekly Contest 105 - Q4 - reached 917 / 921 2709. Greatest Common Divisor Traversal I know this is DSU with primes for sure in the first minute. But I couldn&amp;rsquo;t find it out using the same technique as in the sieve of Eratosthenes. Actually I have solved similar problems before: 1862. Sum of Floored Pairs 1819. Number</description></item><item><title>刷题一周年纪念</title><link>https://albert.cn/cs/05-24-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-24-2023/</guid><description>当时觉得很难的题目 1 - Binary Search 33. Search in Rotated Sorted Array 简化之后的题：153. Find Minimum in Rotated Sorted Array，今日用时12分钟，也不是很快，相当于1550的题 在做完上题</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/05-23-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-23-2023/</guid><description>今天是开始刷题一周年纪念日，就从今天开始记录一些总结。 1 - 3D dp with small numbers Leetcode 2318. Number of Distinct Roll Sequences 很快就想到了要用dp，也找到了关系式，但没有很快意识到原来</description></item><item><title>每日刷题总结</title><link>https://albert.cn/cs/05-25-2023/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/05-25-2023/</guid><description>1 - Precomputation: 1. Two Sum Normally, we may use brute force to find the solution. class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: n = len(nums) for i in range(n): for j in range(i+1, n): if nums[i] + nums[j] == target: return [i, j] But for i after first j, we have seen them and we can remember them while we progress to higher i. Or we</description></item><item><title/><link>https://albert.cn/cs/gaokao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/gaokao/</guid><description>https://atcoder.jp/contests/abc307/tasks/abc307_e</description></item><item><title>DP Bitmask</title><link>https://albert.cn/cs/t/dp-bitmask/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/t/dp-bitmask/</guid><description>mask &amp;amp; (1&amp;lt;&amp;lt;j) # check mask ^ (1&amp;lt;&amp;lt;j) # remove mask | (1&amp;lt;&amp;lt;j) # set Arrangements max/min/cnt Min XOR sum def dp(mask, i): if i == n: return 0 res = inf for j in range(n): if mask &amp;amp; (1&amp;lt;&amp;lt;j): res = min(res, dp(mask ^ (1&amp;lt;&amp;lt;j), i + 1) + (nums1[i] ^ nums2[j])) return res return dp((1&amp;lt;&amp;lt;n) - 1, 0) Count def dfs(mask, prev): if mask == 0: return 1</description></item><item><title>Sort</title><link>https://albert.cn/cs/t/sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/t/sort/</guid><description>Merge and Quick are more important Bubble, switch, forwards def bubble(nums): for i in range(n): for j in range(n - 1 - i): if nums[j] &amp;gt; nums[j+1]: nums[j], nums[j+1] = nums[j+1], nums[j] return nums Insert, switch, backwords def insert(nums): for i in range(1, n): for j in range(i, 0, -1): if nums[j - 1] &amp;gt; nums[j]: nums[j - 1], nums[j] = nums[j], nums[j - 1] return nums def insert(nums): for</description></item><item><title>Sort Key</title><link>https://albert.cn/cs/t/sort-key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/t/sort-key/</guid><description>cmp_to_key # https://leetcode.com/problems/largest-number/ class Solution: def largestNumber(self, nums: List[int]) -&amp;gt; str: comp = lambda a, b: 1 if a + b &amp;lt; b + a else -1 if a + b &amp;gt; b + a else 0 largest_num = &amp;#39;&amp;#39;.join(sorted(map(str, nums), key=cmp_to_key(comp))) return &amp;#39;0&amp;#39; if largest_num[0] == &amp;#39;0&amp;#39; else largest_num Complicated Key # https://leetcode.com/problems/reorder-data-in-log-files/ class Solution: def reorderLogFiles(self, logs: List[str]) -&amp;gt; List[str]: digits = [] letters = [] for log</description></item><item><title>题型信号</title><link>https://albert.cn/cs/signals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/signals/</guid><description>Technique Signals Cue Response Sum + Subarray Prefix Sum Largest / Smallest / k-th in sorted Heap / Quickselect Arrange to Find Max / Min Heap / Sort with Compare Competing Choices / Select or Skip Dynamic Programming Remember Seen Hashset / Hashmap String Prefix Trie Pattern / Substring Matching Rolling Hash / KMP Repeated Sorting Sorted List / Ordered Set Binary Tree Recursive Traverse / DFS Count Steps in</description></item><item><title>题型总结</title><link>https://albert.cn/cs/topic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albert.cn/cs/topic/</guid><description>Sort Merge Sort and Quick Sort Heap Sort Keys SortedContainers / SortedList Prime Prime factorization Sieve of Eratosthenes Disjoint Set Groups Loop check Intervals / Range merge / insert / remove line sweeping DP Knapsack Select / Skip Coin Change DP Knapsack Heap O(n) Subarray Mono Stack Prev / Next Smaller / Greater Contribution for one element Subsequence Partition Bitmask DP Bitmask / Subset Leetcode Post Trees use stack for</description></item></channel></rss>