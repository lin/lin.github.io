<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A Curious Mind</title><link>https://lin.github.io/</link><description>Recent content on A Curious Mind</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright Albert Innovation</copyright><lastBuildDate>Mon, 24 Aug 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://lin.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>创业初期的一些策略</title><link>https://lin.github.io/posts/startup/</link><pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate><guid>https://lin.github.io/posts/startup/</guid><description>这里讨论的创业并不包含所有不受他人雇佣、自己创造财富的商业行为（也就是经商）。
更具体的，也就是并不包含传统的小商业户，例如，奶茶店、化妆品店或是婚纱店（无论是线上还是线下）。
因为小商业户所从事的领域相对成熟，风险较低，回报相对较少，商业规模也很有限。
这里讨论的创业指的是一项高风险、高回报的商业行为，创业者要提供一个从未存在或是进行过极大改良的产品或服务。
这三个特性决定了创业是一个非常非常艰难的过程，创业把大量复杂艰难的任务综合到一起，同时还要考虑运气的干扰。
创业的成功概率很低，绝大多数（90%）的创业公司都会倒闭。
作为一个创业者，面对巨大的未知，唯一的目标就是提高成功的概率，降低失败的风险，让公司和产品存活下去。
每个创业的经历都有着其独特之处，其成功的模式和路径并不适用每一个创业公司，尤其是那些想做出巨大变革的公司。但有一些非常底层的原则适用于大多数的创业公司，这些经验可以避免创业者犯一些常见的错误，少走些弯路，提高成功的概率。
创业有两个重要的特点，一个是要做的（或者说可以做的）事情太多，一个是资源非常有限。
接下来要讨论的策略大多集中在两个问题，如何在繁复的过程中区分主要和次要的因素？如何高效地利用有限的资源？
做人们想要的产品 / Make things people want
组建一支强大的团队 / Build a great team
把小做好，再做大 / Start small and expand
非常之时，采用非常手段 / Do things that don&amp;rsquo;t scale
总是迅速地做出正确的决定 / Always make the right decisions quickly
身体要棒，动作要快，工时要长 / Exercise more, execute faster and work longer
1. 做人们想要的产品 Make things people want, love and even addict</description></item><item><title>浅谈基于软件的商业价值</title><link>https://lin.github.io/posts/software/</link><pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate><guid>https://lin.github.io/posts/software/</guid><description>1. 软件是工程学的最优形式 从本质上讲，工程学就是利用物理学规律来提高需求满足的效率。
随着科学的进步，工程学的主流，逐渐从机械工程转变为电气工程，再从电气工程转变为软件工程。
较之机械工程，电气工程，软件工程。解决问题的方式越来越抽象，验证和实现设计的效率越来越高。
软件工程从基本的底层逻辑出发，不受物理学规律的限制，甚至可以重新模拟新的物理学规律下的情景。软件工程是工程学的最高形式。
现在所谓的技术公司，甚至技术(tech)这个词，大多数都是狭义地指信息技术，所谓的首席技术官，就是主管软件开发的人。这不是我们这个时代（近二三十年内）的一时热门，相反的，这种情况将更加“恶化”。
由于底层的物理学规律可以通过软件进行模拟，而工程学又是建立于物理学的规律之上。随着计算机计算能力的提高，尤其是量子计算的成熟，其他领域的工程学将逐渐被软件模拟来取代，大多数的的工程师将成为一个特殊的程序员。
在可预见的未来里，软件工程将是人类提高生活效率的主要手段。
参考阅读：Programming the Universe, Seth Lloyd, 2007
2. 软件的商业价值 2.1 产品优势 2.1.1 信息传递便捷，消除了空间和时间的限制 对于用户而言，获取服务的工具高度单一，只要一台电脑或是手机即可，而无需重新购买，适应和携带设备。
对于用户而言，可以不受时间和空间的限制，根据自己的情况来确定服务的时间，例如：
1，在线的教育，不需要用户在固定的时间出现在学校的课堂里，而是利用自己闲散的时间学习
2，在线的购物，不需要用户在商家营业的时间内到店铺里购买，而是随时随地通过电脑手机即可
对于商家来说，节约了大量的线下成本，例如
1，在线的教育，不需要建设校园，课堂，宿舍，食堂
2，在线的购物，不需要租用店铺，随着成交量的提高，可以迅速拓展，而无需过多考虑扩张的成本
2.1.2 可以存储大量的信息，可以短时间内处理大量复杂的信息，并以清晰的方式呈现在用户面前 例如，在线书店可以比任何实体书店存储更多的书籍。
例如，在线邮件可以迅速的搜索过滤用户的邮件历史。
例如，在线的理财工具可以绘制许多便于理解的图表。
例如，在线的地图可以绘制比任何地图册都多的地点，可以迅速的搜索过滤商家和地址，可以用清晰的方式呈现导航路线
2.1.3 可以有效地利用大众的资源 由于信息发布与获取的便捷，软件工程可以充分释放每个人的独特优势，充分利用大众闲置（不得不浪费）的资源，例如，
1，维基百科(Wikipedia)利用了大众的知识建立起一个巨大的知识库
2，评价(Amazon, Yelp, TripAdvisor)，视频(YouTube)，博客(Tumblr)以及微博客(Twitter)使得每一个人都可以提供有价值的信息
3，Uber利用了大众的交通资源，airbnb利用了大众的住房资源
2.1.4 软件可以通过模拟来满足人类诸多方面的需求 由于人类的需求大多可以通过视觉和听觉来满足，软件可以通过模拟来满足人类的需求
例如，
1，电脑游戏
2，在线音乐和影视
3，新闻和社交
2.2 开发优势 2.2.1 开发成本低，验证效率高 对于一个工程师来说，开发软件只需一台联网的电脑即可。
产品的开发和验证几乎是同时发生的，例如对于网页开发来说，只要刷新一下网页即可。
2.2.2 更新迭代快，生产和物流成本为零 从开发结束到投入市场，几乎是同时的。而不像其他实体产品的更新，产品需要生产，用户需要重新获取和购买。
2.2.3 方便的开发工具 由于软件分享的便捷，对于一些常用的工具，都可以从互联网上免费和方便的获取，并且有团队维护和更新这些工具，随着时间的增长，其所管辖的功能将更加简洁、完善和稳定。
2.3 商业模式 1，在线广告。像传统的电视和报纸一样，例如，Google和Facebook
更加具体地，汽车的广告可以贴在报纸上，也可以贴在网站上，都是因为看的人多，所以才会花钱贴广告
2，电子商务。像传统的商场和超市一样，例如，Amazon和Jet
更加具体地，书店里可以卖书，网站上也可以卖书，赚的就是成本和售价的差值
3，平台佣金。电子商务的一个特例，收取商家一定百分比的费用，例如，Uber和Airbnb
更加具体地，用户在网上卖茶叶，用户不需要开发各种软件和教育用户，但是用户盈利的一部分（例如10%的销售）要算作平台费
4，软件服务。和传统的商品一样，通过销售软件收费，例如，shopify和aws</description></item></channel></rss>